"""
{{ entity_name }} Router
Generated by Genesis Engine at {{ generated_at }}
"""

from fastapi import APIRouter, Depends, HTTPException, Query
from sqlalchemy.ext.asyncio import AsyncSession
from typing import List
from uuid import UUID
from app.db.database import get_db
from app.schemas.{{ entity_lower }} import {{ entity_name }}Create, {{ entity_name }}Update, {{ entity_name }}Response, {{ entity_name }}ListResponse
from app.services.{{ entity_lower }} import {{ entity_name }}Service
{% if auth_enabled %}
from app.auth.dependencies import get_current_user
from app.models.user import User
{% endif %}

router = APIRouter()

{% for endpoint in endpoints %}
@router.{{ endpoint.method|lower }}("{{ endpoint.path }}")
async def {{ endpoint.function }}(
    {% if 'id' in endpoint.path %}id: UUID,{% endif %}
    {% if endpoint.method == 'POST' %}{{ entity_lower }}_data: {{ entity_name }}Create,{% endif %}
    {% if endpoint.method == 'PUT' %}{{ entity_lower }}_data: {{ entity_name }}Update,{% endif %}
    {% if endpoint.method == 'GET' and 'id' not in endpoint.path %}page: int = Query(1), size: int = Query(10),{% endif %}
    db: AsyncSession = Depends(get_db){% if auth_enabled %}, current_user: User = Depends(get_current_user){% endif %}
):
    service = {{ entity_name }}Service(db)
    {% if endpoint.method == 'GET' and 'id' in endpoint.path %}
    result = await service.get_by_id(id)
    if not result:
        raise HTTPException(status_code=404)
    return result
    {% elif endpoint.method == 'GET' %}
    result = await service.get_list(page, size)
    return {{ entity_name }}ListResponse(**result)
    {% elif endpoint.method == 'POST' %}
    return await service.create({{ entity_lower }}_data)
    {% elif endpoint.method == 'PUT' %}
    result = await service.update(id, {{ entity_lower }}_data)
    if not result:
        raise HTTPException(status_code=404)
    return result
    {% elif endpoint.method == 'DELETE' %}
    success = await service.delete(id)
    if not success:
        raise HTTPException(status_code=404)
    return {"message": "{{ entity_name }} deleted successfully"}
    {% endif %}
{% endfor %}
